{"version":3,"sources":["components/LandingPage.js","config.js","components/chat/CreateChatRoomView.js","utils/api.js","components/chat/Alert.js","components/chat/ChatHistory.js","components/chat/ChatInput.js","components/chat/ChatCountdown.js","components/chat/ChatView.js","App.js","serviceWorker.js","index.js","assets/svg/logo.svg","assets/svg/send.svg","assets/audio/notification.ogg"],"names":["LandingPage","props","react_default","a","createElement","className","src","logo","alt","width","class","href","Link","to","style","marginLeft","SERVER_URL","CLIENT_URL","CreateChatRoomView","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","roomId","loading","handleCopy","bind","assertThisInitialized","_this2","axios","get","then","response","data","success","setState","copied","console","log","_this3","link","el","document","value","setAttribute","position","left","body","appendChild","select","execCommand","removeChild","window","setTimeout","onClick","Component","Alert","children","ChatHistory","_Component","length","scrollToBottom","inherits","createClass","key","prevProps","over","destroyed","messagesEnd","undefined","scrollIntoView","messages","clientId","chatting","messageElements","map","message","index","senderId","stopMessage","color","scrollToElement","float","clear","ref","chat_Alert","Fragment","ChatInput","updateMessage","submitMessage","onfocus","addEventListener","removeEventListener","messageInput","focus","e","target","preventDefault","onSendMessage","action","autoFocus","input","type","id","onChange","placeholder","disabled","send","ChatCountdown","apply","arguments","time","ChatView","notificationSound","Audio","notification","socket","error","remainingTime","currentLength","handleSendMessage","location","pathname","slice","io","emit","on","play","timeLeft","Date","setSeconds","toISOString","substr","push","msg","_this$state","ChatCountdown_ChatCountdown","ChatHistory_ChatHistory","ChatInput_ChatInput","App","HashRouter","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.63717703.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/svg/logo.svg';\nimport '../App.css';\n\nconst LandingPage = (props) => {\n  return (\n     <div className=\"main\">\n       <hero>\n        <img src={logo} alt=\"Logo\" width=\"200\"/>\n      </hero>\n\n        <div className=\"container\">\n        <div class=\"section\">\n          <h1>Chat Rooms with Time Limit</h1>\n          <p>Built with ReactJS, NodeJS, Express, and Socket.io by <a href=\"http://alaajerbi.com\">@alaajerbi</a></p>\n        </div>\n\t<div className=\"cta\">\n            <Link to='createChatRoom' class=\"btn\" style={{marginLeft: '10px'}}>Create a room!</Link>\n\t</div>\n      </div>\n     </div>\n    \n  )\n}\n\nexport default LandingPage;\n","export const SERVER_URL = \"https://chatrooms-time-limit.herokuapp.com\";\nexport const CLIENT_URL = \"https://alaajerbi.com/chatrooms\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CLIENT_URL } from '../../config';\nimport { createChatRoom } from '../../utils/api';\n\nexport default class CreateChatRoomView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      roomId: null,\n      loading: true,\n\n    }\n\n    this.handleCopy = this.handleCopy.bind(this);\n  }\n\n  componentDidMount() {\n    createChatRoom()\n    .then(response => {\n      if (response.success) {\n        this.setState({\n          roomId: response.roomId,\n          loading: false,\n          copied: false,\n        });\n      }\n      else {\n        console.log('Something is wrong');\n      }\n    });\n  }\n\n  handleCopy() {\n    if (!this.state.copied) {\n      let link = CLIENT_URL + \"/#/chat/\" + this.state.roomId;\n      const el = document.createElement('textarea');\n      el.value = link;\n      el.setAttribute('readonly', '');\n      el.style.position = 'absolute';\n      el.style.left = '-9999px';\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n      this.setState({\n        copied: true\n      });\n      window.setTimeout(() => {\n        this.setState({\n          copied: false\n        })\n      }, 2000);\n    }\n    \n  }\n  render() {\n    return (\n      <div className='container-chat'>\n      <div className=\"content\">\n            { (this.state.loading &&\n              <p>Creating a chatroom, please wait...</p>)\n              ||\n              (this.state.roomId &&\n                <div className=\"room-created-container\">     \n                  <h3>Chatroom link:</h3>  \n                  <Link to={'/chat/' + this.state.roomId}>{CLIENT_URL + \"/#/chat/\" + this.state.roomId}</Link>\n                  <button className='copy-link-btn' onClick={this.handleCopy}>{this.state.copied ? 'Copied!' : 'Copy link'}</button>\n                </div>)       \n            }\n      </div>\n      </div>\n     \n    );\n  }\n}\n","import axios from 'axios';\nimport { SERVER_URL } from '../config';\n\nexport function createChatRoom() {\n  return axios.get(SERVER_URL + '/createChatRoom')\n  .then(response => {\n    return response.data;\n  });\n}\n","import React from 'react';\n\nconst Alert = (props) => {\n  return (\n      <div className='alert-message'>\n      {props.children}\n      </div>\n  )\n}\n\nexport default Alert;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Alert from './Alert.js';\n\nexport class ChatHistory extends Component {\n\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      length: props.length\n    }\n\n    this.scrollToBottom = this.scrollToBottom.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    let { length } = this.state;\n\n    if (prevProps.length > length) {\n      this.scrollToBottom();\n      this.setState({\n        length: prevProps.length,\n      })\n    }\n    else if (this.props.over || this.props.destroyed) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom() {\n    if (this.messagesEnd && this.messagesEnd !== undefined) {\n      this.messagesEnd.scrollIntoView();\n    }\n  }\n\n  render() {\n    let messages = this.props.messages;\n    let clientId = this.props.clientId;\n    let chatting = this.props.chatting;\n    let destroyed = this.props.destroyed;\n    let over = this.props.over;\n\n    const messageElements = messages.map((message, index) => {\n      return (\n        <div key={index} className={'chat-message ' + (message.senderId === clientId ? 'mine' : 'not-mine')}>\n          {message.body}\n        </div>\n      );\n    });\n\n    const stopMessage = (\n      <div className=\"stop-message\">\n        { (destroyed && \"Your partner has left the room.\") || (over && \"Time is up!\") } <Link to='/createChatRoom' style={{ color: \"#222\" }}>Create a new room?</Link>\n        <br />\n        <br />\n      </div>\n    )\n\n    const scrollToElement = <div style={{ float: \"left\", clear: \"both\" }}\n      ref={(el) => { this.messagesEnd = el; }}>\n    </div>;\n\n    return (\n      <div className='chat-history'>\n        {\n          (chatting && messages.length === 0 && <Alert>Someone joined the room, Say Hi!</Alert>)\n          ||\n          (chatting && (\n            <React.Fragment>\n              { messageElements}\n              { scrollToElement}\n            </React.Fragment>\n          ))\n          ||\n          ((over || destroyed) && (\n            <React.Fragment>\n              { messageElements}\n              { stopMessage }\n              { scrollToElement}\n            </React.Fragment>\n          ))\n          ||\n          (<Alert>Waiting for a second party to join...</Alert>)\n        }\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport send from '../../assets/svg/send.svg';\n\nexport class ChatInput extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: ''\n    }\n\n    this.updateMessage = this.updateMessage.bind(this);\n    this.submitMessage = this.submitMessage.bind(this);\n    this.onfocus = this.onfocus.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"focus\", this.onfocus);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"focus\", this.onfocus);\n  }\n\n  onfocus() {\n    this.messageInput.focus();\n  }\n\n  updateMessage(e) {\n    let value = e.target.value;\n    this.setState({\n      message: value\n    });\n  }\n\n  submitMessage(e) {\n    e.preventDefault();\n    let message = this.state.message;\n    if (message !== \"\") {\n      this.setState({\n        message: '',\n      });\n      this.props.onSendMessage(message);\n    }\n  }\n  render() {\n    let chatting = this.props.chatting;\n\n    return (\n      <form action='' className='chat-input'>\n        <input autoFocus ref={(input) => { this.messageInput = input}} type=\"text\" id='message-input' value={this.state.message} onChange={this.updateMessage} placeholder='Type something...' disabled={ !chatting}/>\n        <button id='submit' onClick={this.submitMessage} disabled={ !chatting }><img src={send} /></button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport class ChatCountdown extends Component {\n  render() {\n\n    let time = this.props.time;\n    return (\n      <div className='chat-countdown'>  \n        <p className='timer'>{time}</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport * as io from 'socket.io-client';\nimport { ChatHistory } from './ChatHistory';\nimport { ChatInput } from './ChatInput.js';\nimport { ChatCountdown } from './ChatCountdown';\nimport Alert from './Alert';\nimport { SERVER_URL } from '../../config';\nimport notification from '../../assets/audio/notification.ogg';\n\nexport default class ChatView extends Component {\n\n  notificationSound = new Audio(notification);\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clientId: null,\n      socket: null,\n      roomId: null,\n      messages: [],\n      error: null,\n      chatting: false,\n      over: false,\n      destroyed: false,\n      remainingTime: '05:00',\n      currentLength: 0\n    }\n\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n  }\n\n  componentDidMount() {\n\n    let pathname = this.props.location.pathname;\n    let roomId = pathname.slice(6);\n    console.log('RoomID: ' + roomId);\n\n    const socket = io(SERVER_URL);\n\n    socket.emit('create', roomId);\n\n    socket.on('joined', () => {\n      this.setState({\n        clientId: socket.id,\n        socket: socket,\n        roomId: roomId,\n      });\n    });\n\n    socket.on('ready', () => {\n      this.notificationSound.play();\n      this.setState({\n        chatting: true\n      });\n    });\n\n    socket.on('time left', (timeLeft) => {\n      let time = new Date(null);\n      time.setSeconds(timeLeft);\n\n      this.setState({\n        remainingTime: time.toISOString().substr(14, 5),\n      })\n    })\n\n    socket.on('message sent', data => {\n      if (data.senderId != this.state.clientId) {\n        this.notificationSound.play();\n      }\n      console.log('Message sent successfully!');\n      let messages = this.state.messages;\n      messages.push(data);\n      this.setState({\n        messages: messages,\n        currentLength: messages.length\n      });\n    });\n\n    socket.on('over', () => {\n      this.setState({\n        chatting: false,\n        over: true,\n        remainingTime: '00:00'\n      });\n    })\n\n    socket.on('room not found', () => {\n      this.setState({\n        error: 'Room NOT FOUND'\n      })\n    });\n\n    socket.on('room full', () => {\n      this.setState({\n        error: 'Room FULL!'\n      });\n    })\n\n    socket.on('room destroyed', () => {\n      this.setState({\n        destroyed: true,\n        chatting: false,\n      });\n    });\n  }\n\n\n  handleSendMessage(msg) {\n    let socket = this.state.socket;\n    socket.emit('chat message', msg);\n  }\n\n\n  render() {\n    let { error, socket, messages, chatting, clientId, over, destroyed, remainingTime, currentLength } = this.state;\n\n\n    return (\n      (error && <Alert>{error}</Alert>)\n      || (socket === null && <Alert>Connecting...</Alert>)\n      ||\n      (<div className=\"chatbox\">\n        <ChatCountdown time={remainingTime} />\n        <ChatHistory messages={messages}\n          clientId={clientId}\n          chatting={chatting}\n          over={over}\n          destroyed={destroyed}\n          length={currentLength}\n        />\n        <ChatInput\n          onSendMessage={this.handleSendMessage}\n          chatting={chatting}\n        />\n      </div>)\n    );\n  }\n}","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport LandingPage from './components/LandingPage.js';\nimport CreateChatRoomView from './components/chat/CreateChatRoomView';\nimport ChatView from './components/chat/ChatView';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Route exact path='/' component={LandingPage} />\n          <Route path='/createChatRoom' component={CreateChatRoomView} />\n          <Route path='/chat/:id' component={ChatView} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.1caff7fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/send.632c2b42.svg\";","module.exports = __webpack_public_path__ + \"static/media/notification.a6b4932b.ogg\";"],"sourceRoot":""}