{"version":3,"sources":["components/LandingPage.js","config.js","components/chat/CreateChatRoomView.js","utils/api.js","components/chat/Alert.js","components/chat/ChatHistory.js","components/chat/ChatInput.js","components/chat/ChatCountdown.js","components/chat/ChatView.js","App.js","serviceWorker.js","index.js","assets/svg/logo.svg","assets/svg/send.svg","assets/audio/notification.ogg"],"names":["LandingPage","react_default","a","createElement","className","src","logo","alt","width","href","Link","to","style","marginLeft","SERVER_URL","CLIENT_URL","CreateChatRoomView","props","_this","Object","classCallCheck","this","_super","call","state","roomId","loading","handleCopy","bind","assertThisInitialized","_this2","axios","get","then","response","data","success","setState","copied","console","log","_this3","link","el","document","value","setAttribute","position","left","body","appendChild","select","execCommand","removeChild","window","setTimeout","Fragment","onClick","Component","Alert","children","ChatHistory","_Component","inherits","ChatHistory_createSuper","length","scrollToBottom","createClass","key","prevProps","over","destroyed","messagesEnd","undefined","scrollIntoView","messages","clientId","chatting","messageElements","map","message","index","senderId","stopMessage","color","scrollToElement","float","clear","ref","chat_Alert","ChatInput","ChatInput_createSuper","updateMessage","submitMessage","onfocus","addEventListener","removeEventListener","messageInput","focus","e","target","preventDefault","onSendMessage","action","autoFocus","input","type","id","onChange","placeholder","disabled","send","ChatCountdown","ChatCountdown_createSuper","apply","arguments","time","ChatView","notificationSound","Audio","notification","socket","error","remainingTime","currentLength","handleSendMessage","location","pathname","slice","io","emit","on","play","timeLeft","Date","setSeconds","toISOString","substr","push","msg","_this$state","ChatCountdown_ChatCountdown","ChatHistory_ChatHistory","ChatInput_ChatInput","App","vh","innerHeight","documentElement","setProperty","concat","HashRouter","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.fb78ee11.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/svg/logo.svg';\nimport '../App.css';\n\nconst LandingPage = () => {\n  return (\n    <div className=\"landing-page\">\n\n\n      <div className=\"container\">\n          <img className=\"logo\" src={logo} alt=\"Logo\" width=\"100%\" />\n\n        <h1>Chat Rooms with Time Limit</h1>\n        <p>Built with ReactJS, NodeJS, Express, and Socket.io by <a href=\"http://alaajerbi.com\">Alaa Jerbi.</a></p>\n        <div className=\"cta\">\n          <Link to='createChatRoom' className=\"btn\" style={{ marginLeft: '10px' }}>Create a room!</Link>\n        </div>\n      </div>\n\n    </div>\n\n  )\n}\n\nexport default LandingPage;\n","export const SERVER_URL = \"https://chatrooms-time-limit.herokuapp.com\";\nexport const CLIENT_URL = \"https://alaajerbi.dev/chatrooms\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CLIENT_URL } from '../../config';\nimport { createChatRoom } from '../../utils/api';\n\nexport default class CreateChatRoomView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      roomId: null,\n      loading: true,\n\n    }\n\n    this.handleCopy = this.handleCopy.bind(this);\n  }\n\n  componentDidMount() {\n    createChatRoom()\n    .then(response => {\n      if (response.success) {\n        this.setState({\n          roomId: response.roomId,\n          loading: false,\n          copied: false,\n        });\n      }\n      else {\n        console.log('Something is wrong');\n      }\n    });\n  }\n\n  handleCopy() {\n    if (!this.state.copied) {\n      let link = CLIENT_URL + \"#/chat/\" + this.state.roomId;\n      const el = document.createElement('textarea');\n      el.value = link;\n      el.setAttribute('readonly', '');\n      el.style.position = 'absolute';\n      el.style.left = '-9999px';\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n      this.setState({\n        copied: true\n      });\n      window.setTimeout(() => {\n        this.setState({\n          copied: false\n        })\n      }, 2000);\n    }\n    \n  }\n  render() {\n    return (\n      <div className='create-chat'>\n      <div className=\"container\">\n            { (this.state.loading &&\n              <p>Creating a chatroom, please wait...</p>)\n              ||\n              (this.state.roomId &&\n                (<>     \n                  <h3>Chatroom link:</h3>  \n                  <Link to={'/chat/' + this.state.roomId}>{CLIENT_URL + \"/chat/\" + this.state.roomId}</Link>\n                  <button className='copy-link-btn' onClick={this.handleCopy}>{this.state.copied ? 'Copied!' : 'Copy link'}</button>\n                </>))       \n            }\n      </div>\n      </div>\n     \n    );\n  }\n}\n","import axios from 'axios';\nimport { SERVER_URL } from '../config';\n\nexport function createChatRoom() {\n  return axios.get(SERVER_URL + '/createChatRoom')\n  .then(response => {\n    return response.data;\n  });\n}\n","import React from 'react';\n\nconst Alert = (props) => {\n  return (\n      <div className='alert-message'>\n      {props.children}\n      </div>\n  )\n}\n\nexport default Alert;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Alert from './Alert.js';\n\nexport class ChatHistory extends Component {\n\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      length: props.length\n    }\n\n    this.scrollToBottom = this.scrollToBottom.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    let { length } = this.state;\n\n    if (prevProps.length > length) {\n      this.scrollToBottom();\n      this.setState({\n        length: prevProps.length,\n      })\n    }\n    else if (this.props.over || this.props.destroyed) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom() {\n    if (this.messagesEnd && this.messagesEnd !== undefined) {\n      this.messagesEnd.scrollIntoView();\n    }\n  }\n\n  render() {\n    let messages = this.props.messages;\n    let clientId = this.props.clientId;\n    let chatting = this.props.chatting;\n    let destroyed = this.props.destroyed;\n    let over = this.props.over;\n\n    const messageElements = messages.map((message, index) => {\n      return (\n        <div key={index} className={'chat-message ' + (message.senderId === clientId ? 'mine' : 'not-mine')}>\n          {message.body}\n        </div>\n      );\n    });\n\n    const stopMessage = (\n      <div className=\"stop-message\">\n        { (destroyed && \"Your partner has left the room.\") || (over && \"Time is up!\") } <Link to='/createChatRoom' style={{ color: \"#222\" }}>Create a new room?</Link>\n        <br />\n        <br />\n      </div>\n    )\n\n    const scrollToElement = <div style={{ float: \"left\", clear: \"both\" }}\n      ref={(el) => { this.messagesEnd = el; }}>\n    </div>;\n\n    return (\n      <div className='chat-history'>\n        {\n          (chatting && messages.length === 0 && <Alert>Someone joined the room, Say Hi!</Alert>)\n          ||\n          (chatting && (\n            <React.Fragment>\n              { messageElements}\n              { scrollToElement}\n            </React.Fragment>\n          ))\n          ||\n          ((over || destroyed) && (\n            <React.Fragment>\n              { messageElements}\n              { stopMessage }\n              { scrollToElement}\n            </React.Fragment>\n          ))\n          ||\n          (<Alert>Waiting for a second party to join...</Alert>)\n        }\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport send from '../../assets/svg/send.svg';\n\nexport class ChatInput extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: ''\n    }\n\n    this.updateMessage = this.updateMessage.bind(this);\n    this.submitMessage = this.submitMessage.bind(this);\n    this.onfocus = this.onfocus.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"focus\", this.onfocus);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"focus\", this.onfocus);\n  }\n\n  onfocus() {\n    this.messageInput.focus();\n  }\n\n  updateMessage(e) {\n    let value = e.target.value;\n    this.setState({\n      message: value\n    });\n  }\n\n  submitMessage(e) {\n    e.preventDefault();\n    let message = this.state.message;\n    if (message !== \"\") {\n      this.setState({\n        message: '',\n      });\n      this.props.onSendMessage(message);\n    }\n  }\n  render() {\n    let chatting = this.props.chatting;\n\n    return (\n      <form action='' className='chat-input'>\n        <input autoFocus ref={(input) => { this.messageInput = input}} type=\"text\" id='message-input' value={this.state.message} onChange={this.updateMessage} placeholder='Type something...' disabled={ !chatting}/>\n        <button id='submit' onClick={this.submitMessage} disabled={ !chatting }><img src={send} alt=\"Send\" /></button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport class ChatCountdown extends Component {\n  render() {\n\n    let time = this.props.time;\n    return (\n      <div className='chat-countdown'>  \n        <p className='timer'>{time}</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport * as io from 'socket.io-client';\nimport { ChatHistory } from './ChatHistory';\nimport { ChatInput } from './ChatInput.js';\nimport { ChatCountdown } from './ChatCountdown';\nimport Alert from './Alert';\nimport { SERVER_URL } from '../../config';\nimport notification from '../../assets/audio/notification.ogg';\n\nexport default class ChatView extends Component {\n\n  notificationSound = new Audio(notification);\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clientId: null,\n      socket: null,\n      roomId: null,\n      messages: [],\n      error: null,\n      chatting: false,\n      over: false,\n      destroyed: false,\n      remainingTime: '05:00',\n      currentLength: 0\n    }\n\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n  }\n\n  componentDidMount() {\n\n    let pathname = this.props.location.pathname;\n    let roomId = pathname.slice(6);\n    console.log('RoomID: ' + roomId);\n\n    const socket = io(SERVER_URL);\n\n    socket.emit('create', roomId);\n\n    socket.on('joined', () => {\n      this.setState({\n        clientId: socket.id,\n        socket: socket,\n        roomId: roomId,\n      });\n    });\n\n    socket.on('ready', () => {\n      this.notificationSound.play();\n      this.setState({\n        chatting: true\n      });\n    });\n\n    socket.on('time left', (timeLeft) => {\n      let time = new Date(null);\n      time.setSeconds(timeLeft);\n\n      this.setState({\n        remainingTime: time.toISOString().substr(14, 5),\n      })\n    })\n\n    socket.on('message sent', data => {\n      if (data.senderId !== this.state.clientId) {\n        this.notificationSound.play();\n      }\n      console.log('Message sent successfully!');\n      let messages = this.state.messages;\n      messages.push(data);\n      this.setState({\n        messages: messages,\n        currentLength: messages.length\n      });\n    });\n\n    socket.on('over', () => {\n      this.setState({\n        chatting: false,\n        over: true,\n        remainingTime: '00:00'\n      });\n    })\n\n    socket.on('room not found', () => {\n      this.setState({\n        error: 'Room NOT FOUND'\n      })\n    });\n\n    socket.on('room full', () => {\n      this.setState({\n        error: 'Room FULL!'\n      });\n    })\n\n    socket.on('room destroyed', () => {\n      this.setState({\n        destroyed: true,\n        chatting: false,\n      });\n    });\n  }\n\n\n  handleSendMessage(msg) {\n    let socket = this.state.socket;\n    socket.emit('chat message', msg);\n  }\n\n\n  render() {\n    let { error, socket, messages, chatting, clientId, over, destroyed, remainingTime, currentLength } = this.state;\n\n\n    return (\n      (error && <Alert>{error}</Alert>)\n      || (socket === null && <Alert>Connecting...</Alert>)\n      ||\n      (<div className=\"chatbox\">\n        <ChatCountdown time={remainingTime} />\n        <ChatHistory messages={messages}\n          clientId={clientId}\n          chatting={chatting}\n          over={over}\n          destroyed={destroyed}\n          length={currentLength}\n        />\n        <ChatInput\n          onSendMessage={this.handleSendMessage}\n          chatting={chatting}\n        />\n      </div>)\n    );\n  }\n}","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport LandingPage from './components/LandingPage.js';\nimport CreateChatRoomView from './components/chat/CreateChatRoomView';\nimport ChatView from './components/chat/ChatView';\n\nclass App extends Component {\n  componentWillMount() {\n    // We listen to the resize event\n    window.addEventListener('resize', () => {\n      // We execute the same script as before\n      let vh = window.innerHeight * 0.01;\n      document.documentElement.style.setProperty('--vh', `${vh}px`);\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Route exact path='/' component={LandingPage} />\n          <Route path='/createChatRoom' component={CreateChatRoomView} />\n          <Route path='/chat/:id' component={ChatView} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.1caff7fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/send.632c2b42.svg\";","module.exports = __webpack_public_path__ + \"static/media/notification.a6b4932b.ogg\";"],"sourceRoot":""}